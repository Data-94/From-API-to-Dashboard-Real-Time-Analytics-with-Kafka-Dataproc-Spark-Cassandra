version: '3.9'
services:
  cassandra-1:
    image: cassandra
    container_name: cassandra1
    hostname: cassandra1
    ports:
      - "9042:9042"
    networks:
      - proje_net
    environment: 
      CASSANDRA_SEEDS: "cassandra1,cassandra2"
      CASSANDRA_CLUSTER_NAME: MyTestCluster 
      CASSANDRA_DC: DC1 
      CASSANDRA_RACK: RACK1 
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch 
      CASSANDRA_NUM_TOKENS: 128 
  
  cassandra-2:
    image: cassandra
    container_name: cassandra2
    hostname: cassandra2
    ports:
      - "9043:9042"
    networks:
      - proje_net
    environment: 
      CASSANDRA_SEEDS: "cassandra1,cassandra2"
      CASSANDRA_CLUSTER_NAME: MyTestCluster 
      CASSANDRA_DC: DC1 
      CASSANDRA_RACK: RACK1 
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch 
      CASSANDRA_NUM_TOKENS: 128
    
    depends_on:
      cassandra-1:
        condition: service_started
    
  cassandra-3:
    image: cassandra
    container_name: cassandra3
    hostname: cassandra3
    ports:
      - "9044:9042"
    networks:
      - proje_net
    environment: 
      CASSANDRA_SEEDS: "cassandra1,cassandra2"   
      CASSANDRA_CLUSTER_NAME: MyTestCluster 
      CASSANDRA_DC: DC1 
      CASSANDRA_RACK: RACK1 
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch 
      CASSANDRA_NUM_TOKENS: 128

    depends_on:
      cassandra-2:
        condition: service_started
    
  graphana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - proje_net

  zookeeper:
    image: zookeeper:3.8.0
    container_name: zookeeper-docker
    hostname: zookeeper # hostname kafkada kullanılacak amacı ise zookeeper'ın container içindeki ismiyle iletişim kurabilmesi
    ports:
      - "2181:2181"
    networks:
      - proje_net

  kafka-server-1:
    image: "bitnami/kafka:3.3.1"
    container_name: kafka-container-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,PLAINTEXT_HOST://:9093"  
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      # Eğer VM makine üzerinde çalıştırılıyorsa localhost yerine external ip adresi yazılmalıdır.
      # KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://23.43.321:9092,PLAINTEXT_HOST://localhost:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://34.78.12.94:9092,PLAINTEXT_HOST://kafka-1:9093" 
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181/kafka-1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - proje_net
      
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:master
    ports:
      - 8080:8080 # Changed to avoid port clash with akhq
    depends_on:
      - kafka-server-1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9093
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - proje_net
volumes:
  cassandra:
networks:
  proje_net:
    driver: bridge
